//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ToDoListProject.ProxyService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ProxyService.IProxyServiceContract")]
    public interface IProxyServiceContract {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProxyServiceContract/GetAll", ReplyAction="http://tempuri.org/IProxyServiceContract/GetAllResponse")]
        WebInterfaces.Model.ToDoItemData[] GetAll(int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProxyServiceContract/GetAll", ReplyAction="http://tempuri.org/IProxyServiceContract/GetAllResponse")]
        System.Threading.Tasks.Task<WebInterfaces.Model.ToDoItemData[]> GetAllAsync(int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProxyServiceContract/CreateItem", ReplyAction="http://tempuri.org/IProxyServiceContract/CreateItemResponse")]
        void CreateItem(WebInterfaces.Model.ToDoItemData item);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProxyServiceContract/CreateItem", ReplyAction="http://tempuri.org/IProxyServiceContract/CreateItemResponse")]
        System.Threading.Tasks.Task CreateItemAsync(WebInterfaces.Model.ToDoItemData item);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProxyServiceContract/UpdateItem", ReplyAction="http://tempuri.org/IProxyServiceContract/UpdateItemResponse")]
        void UpdateItem(WebInterfaces.Model.ToDoItemData item);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProxyServiceContract/UpdateItem", ReplyAction="http://tempuri.org/IProxyServiceContract/UpdateItemResponse")]
        System.Threading.Tasks.Task UpdateItemAsync(WebInterfaces.Model.ToDoItemData item);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProxyServiceContract/DeleteItem", ReplyAction="http://tempuri.org/IProxyServiceContract/DeleteItemResponse")]
        void DeleteItem(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProxyServiceContract/DeleteItem", ReplyAction="http://tempuri.org/IProxyServiceContract/DeleteItemResponse")]
        System.Threading.Tasks.Task DeleteItemAsync(int id);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IProxyServiceContractChannel : ToDoListProject.ProxyService.IProxyServiceContract, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ProxyServiceContractClient : System.ServiceModel.ClientBase<ToDoListProject.ProxyService.IProxyServiceContract>, ToDoListProject.ProxyService.IProxyServiceContract {
        
        public ProxyServiceContractClient() {
        }
        
        public ProxyServiceContractClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ProxyServiceContractClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ProxyServiceContractClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ProxyServiceContractClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public WebInterfaces.Model.ToDoItemData[] GetAll(int userId) {
            return base.Channel.GetAll(userId);
        }
        
        public System.Threading.Tasks.Task<WebInterfaces.Model.ToDoItemData[]> GetAllAsync(int userId) {
            return base.Channel.GetAllAsync(userId);
        }
        
        public void CreateItem(WebInterfaces.Model.ToDoItemData item) {
            base.Channel.CreateItem(item);
        }
        
        public System.Threading.Tasks.Task CreateItemAsync(WebInterfaces.Model.ToDoItemData item) {
            return base.Channel.CreateItemAsync(item);
        }
        
        public void UpdateItem(WebInterfaces.Model.ToDoItemData item) {
            base.Channel.UpdateItem(item);
        }
        
        public System.Threading.Tasks.Task UpdateItemAsync(WebInterfaces.Model.ToDoItemData item) {
            return base.Channel.UpdateItemAsync(item);
        }
        
        public void DeleteItem(int id) {
            base.Channel.DeleteItem(id);
        }
        
        public System.Threading.Tasks.Task DeleteItemAsync(int id) {
            return base.Channel.DeleteItemAsync(id);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ProxyService.IUserProxyService")]
    public interface IUserProxyService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserProxyService/CreateUser", ReplyAction="http://tempuri.org/IUserProxyService/CreateUserResponse")]
        int CreateUser(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserProxyService/CreateUser", ReplyAction="http://tempuri.org/IUserProxyService/CreateUserResponse")]
        System.Threading.Tasks.Task<int> CreateUserAsync(string name);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IUserProxyServiceChannel : ToDoListProject.ProxyService.IUserProxyService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UserProxyServiceClient : System.ServiceModel.ClientBase<ToDoListProject.ProxyService.IUserProxyService>, ToDoListProject.ProxyService.IUserProxyService {
        
        public UserProxyServiceClient() {
        }
        
        public UserProxyServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public UserProxyServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public UserProxyServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public UserProxyServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public int CreateUser(string name) {
            return base.Channel.CreateUser(name);
        }
        
        public System.Threading.Tasks.Task<int> CreateUserAsync(string name) {
            return base.Channel.CreateUserAsync(name);
        }
    }
}
